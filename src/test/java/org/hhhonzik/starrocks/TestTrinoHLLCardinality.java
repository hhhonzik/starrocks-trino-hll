package org.hhhonzik.starrocks;
/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static org.assertj.core.api.Assertions.assertThat;
import org.junit.jupiter.api.Test;

public class TestTrinoHLLCardinality {
    @Test
    public void testEmpty() {
        TrinoHLLCardinality c = new TrinoHLLCardinality();

        assertThat(c.evaluate("AgwAAA==")).isEqualTo(0L);
    }

    @Test
    public void testCardinality()
    {
        TrinoHLLCardinality c = new TrinoHLLCardinality();
        Long cardinality = c.evaluate("AgwxAAKmBwsAxDQMgMruEQBKRRhDUnwYgYzpGgD6mCeBrv9AwL1CSEAlOFCAmmVSQES5UsBt1lrArHpfgh9/X0E8jmBB6cNlA3CudIHvYXbAfzh9gPjsicIwpJFAbOecABhqngB3P5/BrvigQPWNpsLPxKaAuXGnQIBUqUCbKqrA22ytQSVIsEDb9rECjta9gDHnvYRRFsAARtHEgtxeyoCoytDB5fPWQZP810GgudiAHjHbgMRq6wBu6vGAwZTywKzO+AS/+/g=");
        assertThat(cardinality).isEqualTo(49L);
    }

    @Test
    public void testBigCardinality()
    {
        TrinoHLLCardinality c = new TrinoHLLCardinality();
        Long cardinality = c.evaluate("AwwBIyUjQ2RYIicVVSVSdVJ1RpJEZ2UzeYQ1VTIiREJTVFUmQkUyOSZBd2NEUXQjMjMzJVRTRSdUhEJaIyNJJGVEIzMiQ0RnMWdCRDOTVxdWM4VkJZQzIzU1NTMzdTM1VMVlSFJVNXW2RINSEzUzITZUVnJHdBJCRDQzhoJESUR4KTNERyQiSFdVZDNDJlIzUnVlQkVERzdCVUYyRTZiNFRWQ0RzMWQzRiN0dDMkUyOTVDdSUpVUM2o1Q1QlYkNTJGI0RUVSRWNVlEWERFE1MVVSO2I0ImUiNDNFNkU3M2M1ZYREMUJUNkJjJXQyNlJ0L2R4EydUdSMyUjKURTNoR0M1I0MzVDNhA1aTNGNoU2MiI3UzIWJGRCZFZEVjVkU0RyVHUjRBOHM6VEVCMjMyNTMjNDdUQxKEZUNDIlZGRmFHNEVkJUY0NIdGVDQ1M4M0VEMjM0RjQySTIzMTMmVUhHMzJkUkcjYjNWU2RSpCIiOSojQjMTQnNZJkVkQ0UjRDg2U0JCNEQxU2IjQzJRVUQ0VWQ0KXNIZjV0VUVENjJTNzVVNFFlJiM4NEJFNlMmQzUxVBVEJUJCM2MlMTZCJVM1NjUjQzNVRFNkRkZGJlViUjdHJEc1RjVCViQ0RRIzU1IzVHU1VTNEKVNnJEQjNFMzczM0VLQUUzMiRERzY0JDQ1U2M1SVQ1M1UytTI2UkMnYzNzZ0FDUzQ2OEM3YkNSNlQzFJJjI0NDFDU0UkQkIyUSczVEN0ZjV0NDUxciOVKGVWU1RWNiJEE2UzM0RTRSU4lVOiZkklUxWDJTpDRFMlR2QzREMUQ5o1NSg1FoNSVFRlTyEzRUUcUyVkViRDOUc0QkRDMzNSMzNENTMjM0MyQySyZTNGNJMlhTVmN1JWRUNGNiNDZDgzdEQkRJM0ZFMjZ2cmNVMlViViJEIzQTZSFimVMTNpM0JUM0NVRHREMzM1UzVEKiVCJURHQnUmOFg6JDOEk0NYRHI1VWNis0NUJTRCRDRDRTM1R0UkM1MyIoRWIzJDQoNShic0VTJkRTJFQjNCVXhEZkk2JTNjNUNmIkVERTRDMyRDV3QkRUZlQ1dzMmRjRiNjUyQSRVUWNzREIiJCQ4NHNTJ0U1Y3RDNURnKaRDLCM0NyQiRiWBcjaHVHViQlcyMUIlMiIWY2Q1Q2NUZVNDIjk0pVI1QiJERFMVVxQ1F0kzWjJ1I0MyNjQjZCJFZlQzQiIzRC02InRJI3Q0UTgVJVIzNWYzU0ImOVFVdDRTNUFSZEI0Q1YyQhUjQ0OUNSJVRERFVSVDNYREdGRXIjVIUlNSVmOTJVZFNyRVRDJHZUJLRFVyM0NDMUSkY1U3QylIODQyOXNFVGU5ZilUJEJTJVNFNFI2SFNDQyNjNmhEQqtiNFMzdTRDZSc3lRVERWYyc1MlJTNoVCJFWFRDRkOHODSUM1I1hUVCJEY0Y0kzMkNFWEQiPCNTdTRCUjUyQ1Y0YkOINHQkZIQkQkNCpkhDJHhERIMnNEhlVjpjOEQ2QiMjNkEyc1VEJERSdWNWJEMjODJChCVEM2RkJ1YVU0ISRjVEKUJjGTxFRlMjNjMzQUISFaNFFHImhUZUOSMzVVN3V2YiFDZSdURFNlEzFiMyVSNTI2RbMmUjVENlZ0NCUyJmNTUkNIZ1RDojJTMTlJQ0IqM4NFVWMiYkNCRERkJmSNhWFTUkRiQjJ0SEVBRDRiMnQxZ4EjNmcmJHNCRiIyNjpIUVVTVnNERIgURzNSWCVEVCNTGFM1VjJFQ0hXczYkJVMyRjNWMjREcjNEdmMXdEYzElJTlFRmQSdGI0REU2ZYE1MzRDOVREU1cjNDIzQxVjFDRGQjY2RzVSVENFNFI0Q1ZSGHM0IkQ4Q1N2NTVEUzYTVzQlUzQzdlJ4UjMxUpNFQhMzNzQhYyZGNDNTJEM1NDR0hERlYsRUIzWEM1RZEkNHYyNlZGRGRFJDVmWyYzNlMyVjFaI1NTNBRDVXNEdCZFNlNEh1UUFUUzVmTUUjRkQmZzMnhUMhNERFIzQ3ZURDVVNDNUNDRTIzQ2RVJERDYzJSN0ZGeiRBRHVDQ2ZEeURWNTUzVjoyRkJSV1JFYzUTUyUiMlUjUlJUVENlJzVEMzUjNUQ0RGQlNTIiUlRUsyVnNBZjmDZkEyN1QWYkJENVEiRFQ0JERFNCQ1M0SjR0MzNURDYzVhJDNSMTQkNlVnQ2V1ZyBidVJnF3NFRnVjY6VCaVUjUiNGIzRTNlRDRTIjVSRERmM2QyXFNDdlVDQxMzRVkzFDJEU0YzZDMlEihSRHJDVVQiU3mjN0JSVhTyVFRmRiIxNXR4MkRHMlIzNFMihCUjImNJVEozURRyQyciSERUYzZlczJTQkR3WzREJIVCN0QiNlVVYyVWIjQ2pDIyM3RmYpRSRVUyNTUnYicVhCI0QzMzZCRzIkU0JFVUNTRDV0ODUzE1FzJGIkRGRDRIRDRUOFMyNUhCojMzJTFWNFNmYxNTRDRUJDRDY0MzJnNjUSQjNBdiVUk0JCNDVlQ1VTJEMyMnNVU1hURTVWhFJiNUQyQjNlQ0ojNTYmNCpmQzS0JzM0RCN1NWJhMyVFZDQzUVUnljJzVTYzMzNzdTUkMjRWRFQzWTdTM1UkVEdXNGOGRSUzRLSEdCQzVGZTRGQzNJU4lCdSRZKVhTQ5MyllEzQjIVJaZTVFRkNFRlM3VERTVEdUNSVElUU4YlNSVDMUNiMjMVRUZ2J0kAAA");
        assertThat(cardinality).isEqualTo(58312L);
    }

    @Test
    public void testEnormousCardinality()
    {
        TrinoHLLCardinality c = new TrinoHLLCardinality();
        Long cardinality = c.evaluate("AwwKVCM1UkZ1JDM1NnVUU1JXw1RDQnpDg2NUVDNFIkRUYWRGJUdkREN0RXVUVWRSRCVpU0JVNTRWgjRDViNUNmYnI2dFMlQjckVsk1Q1MlQkMlMpMWs2USNnQjU0hlZmVCOEN0QkJGRDMzNjRjJGUjVNVUMhcyM6IjQiNGYkJ3YURUMjNzM1JHVSRDNENXRJI0RlNRhGUkUlZWI1KTYzkiQzNzM2ZCZFWFVSdFdkNERjNbNzEjhDRzZHl1FWMzclQzQ1ZFKERVMlQlU1VUVHRFRBNkU1dDNDM1dSODI3M0UyRThVJCiXVDMmJVS0IiNDQ2VEMkQzRVNCRDZDQyWDODFFJCVDkzJERGVlY0RTZkQzdDNEJERVFCQyQjN0VKYyNDZTNVMjUjQ1VCM2Y0MlIkQ3I2I1dERkU4RUJVhHVCRVQiQmQyVEUkdjVzM0Q2VkElRURBIlNmM1MkSKMyNlVUQ2JCRlRGU2Y3RHVWUXNFdkklk2QzRLRCMzVkREciRlUllYKYNUQTMjNUNjQkNGMhdDenJlhDV0VTdlNURENHVpNkhCFFISVCZnVzIzdLc3IzVEVnRnQ0RFMnM0MqNHI1E0NDY0VDhSNVJFM0V4REJmUVNVYVcxVDJVQyWKNnVVQlE2N0M0QyMjQxZWM0QjUkE1NTY3M2J1NpYyZUI1okMxVEMzNzUylSRURSZUU1hHMkVkI2OEaIImU5NWJEIUU0JEWCQxZjMmMzVVREZjckNThDUzJCMhNWNEVlQSREM3tCZDRSOUZEREVIM2NRZENnY0UyU1RzZTQ1VHRGJCU0VDMlVoJKVTQ0JUU3UTZTJjVjQzZSJERYMyN2NUJTQUNEMyRxM1RDNHUzRlUkI1JURnNVVkVEhENFJ2NpQzQ1NlQ3NVVDZkhGM1RJalRDRTNWUzMzkmhDMlclNTNFeHZjYTNYVDVTNCVUhWJUVTQiRVc0UzVVY0RDRIVGQ3REZEFEMkKCJiExVyhTWUYlRWKGMzJkdEKERTclREdDK2Q1ZDckUlmGNClUc3RGNVM9RlOEQmYjNVNDNBRnIyQmNUUzNFdUY3NyZGSMRVNTQjZaIyYlFkQyOEUkY0tFQmIyZDJlI1MlNjVCIyRDM1RPQkQ1VhNWSCNlZUNWMlpjNHUhJTRDVmZDozQjUzJTU3UjZUNEZDRjQjKEQiMldmRlM6QkNCOVJxM1eENJNSE0NDRBQ2ZHNERGNGNTVVUzMxY0Y0ZDZHNJcVEnQ1MyVcMzKDcjNjQkdDhERlQ1VDNDRVNlNrVEJENERjRkRkVLdkR1RTJHUzdSYTKXQjEyIyQ0KWMkZzRCMUM2VCVGWkNmczNBRVNTJFRSUkNkRJNFRDhkY0QUN2JFQkJERkNFJTNUQ1NlUjVDQzNUR2aGZCIjUyRDREIzMjNTaHMTUlNEdyQsZTNCQ0JzZlIzREQ0VmRCU1Q2Q2NDQ3FENTMihJNRtXR0OiMlMzUzhUNWZCQyVFUiQ0NFIzIyQjYyQyOJRCKTQ0OCUxeGIkZEJhMjUlMkQkRTc1QnMjNFM2VScjcRVGNURBNUFUFkIlZEU5I0gyNaM0MjI2MzZTNlhjMUNGaEU0Q1NFVWOFI2FEQoQzUyRTZiQiJGZEEyZVREY2J2VFIzRkRkRFSDhFJEg4VEYjVRZVY1NDdENTVTJDNCQFNhpCNpUjUjJ2RESEdENBJFNURGYVRVNlI0JlU0MyVUMzM0c1IyVCM6VDQ0NDeWJHmDQpMzVDRDYidDUpRmU3RkUyNDIkdmQ3J4U1aDNVUjNVROQkJiMlJFZSiGNjwzVDJiVDQmIld0I0QkMiZDNFZDY0IzM1NDNVdGQ0FENVIXQzMzJUQlJXOFJko1VkQzNiNjVlEzIS5jNDNChIIzZ3JGQydWJFREQ1FlVTVzQiJSQlM0NHJKZCZENHM1UlZUJDiVZGRQUzMzMyNnU4VEVyIUREhEVFVDQzMUc1QxJSRlVjRDR0QzM0QkNDM3VTMlEzNUNWJlcnYzQ1Y3eGajJzIjIyNGJSFGRkZGI4VXMTQkNjJEszcUhDIzNmRUUiRTJhNFKzNTIFQ0M3QhZ2I3IlI1MyNBMkJEQ4KKNEQ1UmJDUkNVU0VDNWQkImeJdTFGhzJDZHMzJkNGpDQ1ZSNEQ0glM2RFN1ZXNFJSJToWMjdTOxElRDJkpSJVVFNHQ0SGNnd1RERWVDMzNHhmFSVCE2IyQ3JSNXZFVUJDMjQTNGVWM1MzJEWTRDRFM0EkdFdRRjdVRjQXmSQlWFM5NDNkVVMkZIUmYkNVREMlYmVERESFVDNSM2JGYyFiYnIyVFNFUyKTM3NRVWJEYzQlNVMkhlIrUjRkQzYjVDXIRFKllDQ2cWM3VSZVNENSM0QGVTNllyM2NCRTU2WCJFNFMkVTYzVsMiJVNBSWRXNThTNjUxZENBV2UyQ6VUNVc0NZViJLFEI3NFRnM1ZGEiNEJCM0JTM3ITJMM2VFR1JEIzNIJ2IzRnQmVERzYjc1IyZlMkVORYQpRlQkdzI1Y0IjNUU3VGQ1RDY0JRdDI0UjM3dDZSVXM0JlVzJlY0VkVnNFMhFkRlQyg0Z1QkN0VjJFlCYnM0VDR0dFJGdjQpI4hVTVQ0RUZDNChUQzMzlDRUh0RzdkNTtXIzZEdDM1MlJVJFMjRCRTVGNEY0NUM0SERaVkN4VLd1NCVjIjNHVTU1I0RTVlJkYURDdUQ0U0U1UxQ0VEVTWGNTYzVVk3MkM0MBAJIGAg==");
        assertThat(cardinality).isEqualTo(31050977L);
    }
}